<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:To_Do.Controls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <Style TargetType="{x:Type local:TitleBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TitleBar}">
                    <StackPanel
                        Margin="{TemplateBinding Margin}"
                        Background="Transparent"
                        Orientation="Horizontal">
                        <materialDesign:PackIcon
                            Width="30"
                            Height="30"
                            Margin="0,4,0,0"
                            VerticalAlignment="Center"
                            Kind="{TemplateBinding IconKind}" />
                        <TextBlock
                            Margin="10,0,0,0"
                            VerticalAlignment="Center"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="Bold"
                            Text="{TemplateBinding Title}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <Border
                            x:Name="backgroundBorder"
                            Margin="2"
                            CornerRadius="5" />
                        <Rectangle
                            x:Name="leftIndicatorRect"
                            Width="3.5"
                            Height="18"
                            Margin="2,0,0,0"
                            HorizontalAlignment="Left"
                            RadiusX="2"
                            RadiusY="2" />
                        <Rectangle Fill="AliceBlue" Opacity="0" />
                        <ContentPresenter />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="leftIndicatorRect" Property="Fill" Value="LightSeaGreen" />
                            <Setter TargetName="backgroundBorder" Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
                            <Setter TargetName="backgroundBorder" Property="Opacity" Value="0.2" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="backgroundBorder" Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
                            <Setter TargetName="backgroundBorder" Property="Opacity" Value="0.2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TaskItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <Border Background="#323232" CornerRadius="5" />
                        <Border
                            x:Name="mouseOverBorder"
                            Margin="2"
                            CornerRadius="5" />
                        <Rectangle Fill="AliceBlue" Opacity="0" />
                        <ContentPresenter />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="mouseOverBorder" Property="Background" Value="#434343" />
                            <Setter TargetName="mouseOverBorder" Property="Opacity" Value="0.2" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="mouseOverBorder" Property="Background" Value="#434343" />
                            <Setter TargetName="mouseOverBorder" Property="Opacity" Value="0.2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="TaskStepItemStyle"
        BasedOn="{StaticResource MaterialDesignListBoxItem}"
        TargetType="{x:Type ListBoxItem}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="IsSelected" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:CheckIcon}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CheckIcon}">
                    <Grid
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle Fill="Transparent" />
                        <materialDesign:PackIcon
                            Name="checkIcon"
                            Width="24"
                            Height="24"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Kind="StarOutline" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="checkIcon" Property="Foreground" Value="#7081ca" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="checkIcon" Property="Foreground" Value="#fbfbfb" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkIcon" Property="Foreground" Value="#7081ca" />
                            <Setter TargetName="checkIcon" Property="Kind" Value="Star" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="checkIcon" Property="Kind" Value="StarOutline" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:IndicationCheckIcon}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:IndicationCheckIcon}">
                    <Grid
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Rectangle Fill="Transparent" />
                        <materialDesign:PackIcon
                            x:Name="MouseOverIndicationIcon"
                            Width="18"
                            Height="18"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Panel.ZIndex="1"
                            Background="Transparent"
                            Kind="Check" />
                        <materialDesign:PackIcon
                            x:Name="CircleIcon"
                            Width="24"
                            Height="24"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Kind="CircleOutline">
                            <materialDesign:PackIcon.Clip>
                                <EllipseGeometry
                                    Center="12,12"
                                    RadiusX="10"
                                    RadiusY="10" />
                            </materialDesign:PackIcon.Clip>
                        </materialDesign:PackIcon>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="MouseOverIndicationIcon" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="MouseOverIndicationIcon" Property="Visibility" Value="Hidden" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="MouseOverIndicationIcon" Property="Foreground" Value="White" />
                            <Setter TargetName="CircleIcon" Property="Background" Value="#7081ca" />
                            <Setter TargetName="CircleIcon" Property="Foreground" Value="#7081ca" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:IndicationButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:IndicationButton}">
                    <Grid
                        Width="{TemplateBinding ButtonSize}"
                        Height="{TemplateBinding ButtonSize}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Border
                            Name="backgroundBorder"
                            Background="#383838"
                            CornerRadius="5"
                            Visibility="Hidden" />
                        <Rectangle Fill="Transparent" />
                        <materialDesign:PackIcon
                            Width="{TemplateBinding IconSize}"
                            Height="{TemplateBinding IconSize}"
                            Padding="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Kind="{TemplateBinding IconKind}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.Setters>
                                <Setter TargetName="backgroundBorder" Property="Visibility" Value="Visible" />
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Trigger.Setters>
                                <Setter TargetName="backgroundBorder" Property="Visibility" Value="Hidden" />
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AddingTextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AddingTextBox}">
                    <Border
                        Name="backgroundBorder"
                        Background="{TemplateBinding Background}"
                        CornerRadius="3">
                        <WrapPanel Margin="0,10" Orientation="Horizontal">
                            <Grid VerticalAlignment="Center">
                                <materialDesign:PackIcon
                                    Name="LeadingIcon"
                                    Width="{TemplateBinding IconSize}"
                                    Height="{TemplateBinding IconSize}"
                                    Margin="10,0"
                                    VerticalAlignment="Center"
                                    Kind="Add" />
                                <Decorator
                                    Name="PART_ContentHost"
                                    Margin="45,0,0,0"
                                    VerticalAlignment="Center"
                                    Panel.ZIndex="1" />
                            </Grid>
                            <TextBlock
                                Name="IndicatorTextBlock"
                                VerticalAlignment="Center"
                                Text="{TemplateBinding Hint}" />
                        </WrapPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.Setters>
                                <Setter TargetName="backgroundBorder" Property="Background" Value="#3c3c3c" />
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Trigger.Setters>
                                <Setter TargetName="LeadingIcon" Property="Kind" Value="CircleOutline" />
                                <Setter TargetName="IndicatorTextBlock" Property="Visibility" Value="Hidden" />
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CaretBrush" Value="#c3c3c3" />
        <Setter Property="Foreground" Value="#808d97" />
    </Style>

    <Style TargetType="{x:Type local:PagingButtons}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PagingButtons}">
                    <StackPanel Orientation="Horizontal">
                        <Button
                            Margin="5,0"
                            Padding="0"
                            Background="Transparent"
                            BorderThickness="0"
                            Command="{TemplateBinding PageRefreshCommand}">
                            <materialDesign:PackIcon
                                Width="24"
                                Height="24"
                                Padding="0"
                                Foreground="WhiteSmoke"
                                Kind="Refresh" />
                        </Button>
                        <Button
                            Margin="5,0"
                            Padding="0"
                            Background="Transparent"
                            BorderThickness="0"
                            Command="{TemplateBinding PageBackCommand}">
                            <materialDesign:PackIcon
                                Width="24"
                                Height="24"
                                Padding="0"
                                Foreground="WhiteSmoke"
                                Kind="ChevronLeft" />
                        </Button>
                        <Button
                            Margin="5,0"
                            Padding="0"
                            Background="Transparent"
                            BorderThickness="0"
                            Command="{TemplateBinding PageForwardCommand}">
                            <materialDesign:PackIcon
                                Width="24"
                                Height="24"
                                Padding="0"
                                Foreground="WhiteSmoke"
                                Kind="ChevronRight" />
                        </Button>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>